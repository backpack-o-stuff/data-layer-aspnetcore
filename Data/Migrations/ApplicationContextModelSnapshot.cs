// <auto-generated />
using DL.Data.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DL.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("DL.Domain.Monsters.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("Power")
                        .HasColumnName("power")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("monsters");
                });

            modelBuilder.Entity("DL.Domain.Monsters.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonsterId")
                        .HasColumnName("monster_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("Value")
                        .HasColumnName("value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("rewards");
                });

            modelBuilder.Entity("DL.Domain.Scoreboards.Scoreboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("scoreboards");
                });

            modelBuilder.Entity("DL.Domain.Scoreboards.ScoreboardEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonsterId")
                        .HasColumnName("monster_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayersDefeated")
                        .HasColumnName("players_defeated")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScoreboardId")
                        .HasColumnName("scoreboard_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScoreboardId");

                    b.ToTable("scoreboard_entries");
                });

            modelBuilder.Entity("DL.Domain.Monsters.Reward", b =>
                {
                    b.HasOne("DL.Domain.Monsters.Monster", "Monster")
                        .WithMany("Rewards")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DL.Domain.Scoreboards.ScoreboardEntry", b =>
                {
                    b.HasOne("DL.Domain.Scoreboards.Scoreboard", "Scoreboard")
                        .WithMany("ScoreboardEntries")
                        .HasForeignKey("ScoreboardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
